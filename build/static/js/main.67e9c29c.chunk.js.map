{"version":3,"sources":["components/functions.js","components/movieInputs.js","components/components.js","add.js","categories.js","category.js","landing.js","login.js","movie.js","profile/favorites.js","profile/profile.js","search.js","routers.js","components/footer.js","components/header.js","index.js"],"names":["fetchAPI","url","data","a","fetch","credentials","method","body","JSON","stringify","res","json","Overlay","props","className","onSubmit","e","onSave","placeholder","value","values","name","onChange","setValues","target","required","setMetaData","metaData","description","setDescription","type","MetaDataInputs","releaseDate","min","max","Date","toISOString","slice","category","movieLength","DescriptionInput","maxLength","ConfirmCont","showConfirm","msg","onClick","setShowConfirm","doSubmit","ErrMsg","message","AddMovie","history","useHistory","useState","errMsg","setErrMsg","inputData","setInputData","preventDefault","then","success","push","return","Categories","categories","setCategories","useEffect","map","to","categoryId","Category","setCategory","categoryName","useParams","movieId","Landing","Banner","Sites","window","localStorage","getItem","LoggedOut","isOnRegister","setIsOnRegister","setAuthToken","prevState","Register","toggleToken","useContext","t","setMsg","email","setEmail","firstName","setFirstName","surname","setSurname","passwordsMatch","setPasswordsMatch","passwordRef","useRef","onStateChange","substring","length","password","current","registerUser","PasswordInputs","setPassword","password2","setPassword2","ref","id","Login","loginUser","MovieCont","editing","setEditing","movieData","setMovieData","movie","toUpdate","ActionBtns","FavoriteBtn","isFavorite","setIsFavorite","Favorites","userId","favorites","setFavorites","Profile","profileData","setProfileData","created","SearchResults","searchValue","AllRouters","token","exact","path","component","Footer","SearchButton","toggleSearchbar","setToggleSearchbar","search","setSearch","searchMovies","movies","setMovies","SuggestionsCont","closeSuggestions","ProfileButton","toggleMenu","setToggleMenu","menuRef","closeMenu","document","addEventListener","removeEventListener","Menu","LogOutButton","deleteToken","Header","React","createContext","App","setToken","setItem","removeItem","authToken","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67e9c29c.chunk.js","sourcesContent":["export const fetchAPI = async (url, data) => {\r\n  const res = await fetch(\"http://localhost/api/\" + url + \".php\", {\r\n      credentials: 'include',\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    });\r\n\r\n    return res.json();\r\n}","import React from 'react';\r\n\r\nconst Overlay = props => {\r\n  return(\r\n    <form className=\"movieCont\" onSubmit={e => props.onSave(e)}>\r\n      <span>Filmtitel:</span>\r\n      <input placeholder=\"z.B. Fight Club...\" className=\"title datas\" value={props.values.name} onChange={e => props.setValues({...props.values, name: e.target.value})} required />\r\n      <MetaDataInputs data={props} setMetaData={e => props.setValues({...props.values, metaData: e})} />\r\n      <DescriptionInput description={props.values.description} setDescription={e => props.setValues({...props.values, description: e.target.value})} />\r\n      <div className=\"editBtns\">\r\n        <button className=\"btn\" type=\"submit\">Speichern</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Overlay;\r\n\r\nconst MetaDataInputs = props => {\r\n  return(\r\n    <>\r\n    <div className=\"headline\">Filmdaten:</div>\r\n    <div className=\"flexedMetaCont\">\r\n      <label>\r\n        <span>Release:</span>\r\n        <input required className=\"dataInputs\" type=\"date\" onChange={e => props.data.setValues({... props.data.values, releaseDate: e.target.value})} value={props.data.values.releaseDate} min=\"01-01-1900\" max={new Date().toISOString().slice(0, 10)} />    \r\n      </label>\r\n      <label>\r\n        <span>Genre:</span>\r\n        <input required className=\"dataInputs\" placeholder=\"z.B. Liebe <3\" type=\"text\" value={props.data.values.category} onChange={e => props.data.setValues({...props.data.values, category: e.target.value})} />\r\n      </label>\r\n      <label>\r\n        <span>Länge (Minuten):</span>\r\n        <input required className=\"dataInputs\" placeholder=\"Maximal 12 Stunden...\" type=\"number\" min=\"10\" max=\"720\" value={props.data.values.movieLength} onChange={e => props.data.setValues({...props.data.values, movieLength: e.target.value})}  />\r\n      </label>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst DescriptionInput = props => {\r\n  const placeholder = \"z.B. Interstellar ist ein US-amerikanisch-britischer Science-Fiction-Film unter der Regie von Christopher Nolan aus dem Jahr 2014. Der Film spielt in einer dystopischen Zukunft, in der die Menschheit die Erde verlassen muss und ein neues Zuhause auf einem anderen Planeten sucht.\";\r\n  return(\r\n    <label>\r\n      <div className=\"description\">Beschreibung: (Max. 1000 Zeichen)</div>\r\n      <textarea required className=\"descriptionCont\" placeholder={placeholder} onChange={e => props.setDescription(e)} value={props.description} maxLength=\"1000\" />\r\n    </label>\r\n  )\r\n}","export const ConfirmCont = props => {\r\n  const handleCancel = () => {\r\n    props.setShowConfirm(false);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    props.setShowConfirm(false);\r\n    props.doSubmit();\r\n  }\r\n\r\n  if(!props.showConfirm) {\r\n    return null;\r\n  }else {\r\n    return(\r\n      <div className=\"outerWrapper\">\r\n        <div className=\"confirmCont\">\r\n          <span>{props.msg}</span>\r\n          <button onClick={handleCancel}>Cancel</button>\r\n          <button onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ErrMsg = props => {\r\n  return(\r\n  <span className=\"inputMsgText\">{props.message}</span>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { fetchAPI } from './components/functions';\r\nimport Overlay from './components/movieInputs';\r\nimport {ErrMsg} from './components/components';\r\n\r\nconst AddMovie = () => {\r\n  const history = useHistory();\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [inputData, setInputData] = useState({\r\n    name: \"\",\r\n    releaseDate: \"\",\r\n    movieLength: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    metaData: false\r\n  });\r\n\r\n  const saveMovie = e => {\r\n    e.preventDefault();\r\n\r\n    fetchAPI('addMovie', {\r\n      name: inputData.name,\r\n      releaseDate: inputData.releaseDate,\r\n      movieLength: inputData.movieLength,\r\n      category: inputData.category,\r\n      description: inputData.description\r\n    }).then(data => {\r\n      if(data.success) {\r\n        history.push(`/Movie/${inputData.name}`);\r\n      }else {\r\n        setErrMsg(data.return);\r\n      }\r\n    });\r\n  }\r\n\r\n  return(\r\n    <main>\r\n      <h2>Film hinzufügen</h2>\r\n      <Overlay values={inputData} setValues={setInputData} onSave={saveMovie} />\r\n      <ErrMsg message={errMsg} />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AddMovie;","import React, { useEffect, useState } from 'react';\r\nimport { fetchAPI } from './components/functions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Categories = () => {\r\n  const [categories, setCategories] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchAPI('getAllCategories').then(data => {\r\n      if(data.success) {\r\n        setCategories(data.return);\r\n      }else {\r\n        setCategories(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return(\r\n    <main>\r\n      <h2>Kategorien</h2>\r\n      <div className=\"fieldsFlex\">\r\n        {\r\n          categories ? categories.map(values => <Link className=\"listingField\" key={values.categoryId} to={`/Categories/${values.category}`}><span className=\"fieldTitle\">{values.category}</span></Link>) :\r\n          <>\r\n          <h2>Leider gibt es noch keine Kategorien!</h2>\r\n          <span className=\"centered\"><Link className=\"btnAppearence\" to=\"/Add/\">Erstem Film hinzufügen</Link></span>\r\n          </>\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Categories;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchAPI } from './components/functions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Category = props => {\r\n  const [category, setCategory] = useState();\r\n  const {categoryName} = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchAPI('getCategory', {category: categoryName}).then(data => {\r\n      setCategory(data.return);\r\n    })\r\n  }, [categoryName]);\r\n  \r\n  if(typeof category === \"undefined\") {\r\n    return(\r\n      <main>\r\n        Lade...\r\n      </main>\r\n    )\r\n  }else if(typeof category === \"string\") {\r\n    return(\r\n      <main>\r\n        <h2>{category}</h2>\r\n        <span className=\"centered\"><Link className=\"btnAppearence\" to=\"/Add/\">Erstem Film hinzufügen</Link></span>\r\n      </main>\r\n    )\r\n  }else {\r\n    return(\r\n      <main>\r\n        <h2>{categoryName}</h2>\r\n        <div className=\"fieldsFlex\">\r\n          {\r\n            category.map(values => \r\n              <Link className=\"listingField\" key={values.movieId} to={`/Movie/${values.name}`} >\r\n                <span className=\"fieldTitle\">{values.name}</span>\r\n                <span className=\"fieldMeta\">Veröffentlicht: {values.releaseDate}</span>\r\n              </Link>\r\n            )\r\n          }\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = () => {\r\n  return(\r\n    <>\r\n    <Banner />\r\n    <Sites />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n\r\nconst Banner = () => {\r\n  return(\r\n    <main className=\"centered\">\r\n      <h1>Netgo's Filmedatenbank</h1>\r\n      <p>\r\n        Diese Website bietet eine einfache Filmdatenbank. \r\n      </p>\r\n    </main>\r\n  );\r\n}\r\n\r\nconst Sites = () => {\r\n  return(\r\n    <main>\r\n      <p className=\"centered\">\r\n        Was willst Du tun?\r\n      </p>\r\n      <div className=\"fieldsFlex landingNav\">\r\n        <Link className=\"listingField\" to=\"/Categories/\"><span className=\"fieldTitle\">Kategorien</span></Link>\r\n        <Link className=\"listingField\" to=\"/Add/\"><span className=\"fieldTitle\">Film hinzufügen</span></Link>\r\n        {\r\n          window.localStorage.getItem('authToken') ?\r\n          <Link className=\"listingField\" to=\"/Profile/\"><span className=\"fieldTitle\">Profil</span></Link> :\r\n          <Link className=\"listingField\" to=\"/Login/\"><span className=\"fieldTitle\">Einloggen/Registrieren</span></Link>\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}","import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport {fetchAPI} from \"./components/functions\";\r\nimport {ErrMsg} from \"./components/components\";\r\nimport {t} from './index';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoggedOut = props => {\r\n  const [isOnRegister, setIsOnRegister] = useState(true);\r\n  \r\n  return(\r\n    <main>\r\n      <div className=\"accountForms\">\r\n        {isOnRegister ? <Register setAuthToken={props.setAuthToken} /> : <Login setAuthToken={props.setAuthToken} />}\r\n      </div>\r\n      <button className=\"switchFormBtn\" onClick={() => setIsOnRegister(prevState => !prevState)}>\r\n        {isOnRegister ? \"Du hast schon einen Account? Hier einloggen!\" : \"Oder registriere dir hier einen neuen Account!\"}\r\n      </button>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default LoggedOut;\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const {toggleToken} = useContext(t);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [passwordsMatch, setPasswordsMatch] = useState(false);\r\n  const passwordRef = useRef(null);\r\n\r\n  const registerUser = e => {\r\n    e.preventDefault();\r\n\r\n    if(email.substring(email.length - 9) !== \"@netgo.de\") {\r\n      setMsg(\"Nur Mitarbeiter der Netgo GmbH dürfen sich registrieren.\");\r\n      return;\r\n    }\r\n\r\n    if(!passwordsMatch) {\r\n      setMsg(\"Passwörter stimmen nicht überein.\");\r\n      return;\r\n    }\r\n\r\n    fetchAPI('createUserData', {\r\n      email: email,\r\n      name: firstName,\r\n      surname: surname,\r\n      password: passwordRef.current.value\r\n    }).then(data => {\r\n      if(data.success) {\r\n        toggleToken(data.return);\r\n        history.push(\"/\");\r\n      }else {\r\n        setMsg(data.return);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  return(\r\n    <>\r\n    <h2>Registrieren</h2>\r\n    <form>\r\n      <span className=\"topInputPlaceholder\">Email</span>\r\n      <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" name=\"email\" required/>\r\n      <span className=\"topInputPlaceholder\">Vorname</span>\r\n      <input value={firstName} onChange={e => setFirstName(e.target.value)} type=\"text\" name=\"name\" required/>\r\n      <span className=\"topInputPlaceholder\">Nachname</span>\r\n      <input value={surname} onChange={e => setSurname(e.target.value)} type=\"text\" name=\"surname\" required/>\r\n      <PasswordInputs passwordRef={passwordRef} onStateChange={setPasswordsMatch}  />\r\n      <ErrMsg message={msg} />\r\n      <input type=\"submit\" value=\"Registrieren\" onClick={e => registerUser(e)} />\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PasswordInputs = props => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n      if(password === password2 && password !==\"\" && password2 !==\"\") {\r\n          setMsg(\"\");\r\n          props.onStateChange(true);\r\n      }else if(password ===\"\" && password2 ===\"\") {\r\n          setMsg('');\r\n      }else {\r\n          setMsg('Passwords dont match');\r\n          props.onStateChange(false);\r\n      }\r\n  }, [password, password2, props]);\r\n  \r\n  return(\r\n      <>\r\n      <span className=\"topInputPlaceholder\">Password</span>\r\n      <input ref={props.passwordRef} value={password} onChange={e => setPassword(e.target.value)} type=\"password\" placeholder=\"...\" id=\"password\" name=\"password\" required />\r\n      <span className=\"topInputPlaceholder\">Repeat Password</span>\r\n      <input value={password2} onChange={e => setPassword2(e.target.value)} type=\"password\" placeholder=\"...\" id=\"password2\" name=\"password2\" required />\r\n      <ErrMsg message={msg} />\r\n      </>\r\n  )\r\n}\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const {toggleToken} = useContext(t);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const loginUser = e => {\r\n    e.preventDefault();\r\n\r\n    fetchAPI('login', {\r\n      email: email,\r\n      password: password\r\n    }).then(data => {\r\n      if(data.success === false) {\r\n        setMsg(data.return);\r\n      }else {\r\n        history.push('/');\r\n        toggleToken(data.return);\r\n      }\r\n    });\r\n  }\r\n\r\n  return(\r\n    <>\r\n    <h2>Einloggen</h2>\r\n    <form>\r\n      <span className=\"topInputPlaceholder\">Email</span>\r\n      <input placeholder=\"...\" value={email} onChange={e => setEmail(e.target.value)} type=\"email\" name=\"email\" required/>\r\n      <span className=\"topInputPlaceholder\">Passwort</span>\r\n      <input placeholder=\"...\" value={password} onChange={e => setPassword(e.target.value)} type=\"password\" name=\"password\" required/>\r\n      <ErrMsg message={msg} />\r\n      <input type=\"submit\" value=\"Einloggen\" onClick={e => loginUser(e)} />\r\n    </form>\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { fetchAPI } from './components/functions';\r\nimport {ConfirmCont} from './components/components';\r\nimport Overlay from './components/movieInputs';\r\n\r\nconst MovieCont = () => {\r\n  const [editing, setEditing] = useState(false);\r\n  const {name} = useParams();\r\n  const [movieData, setMovieData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchAPI('getMovie', {name: name}).then(data => {\r\n      const movie = data.return;\r\n\r\n      setMovieData({\r\n        movieId: movie.movieId,\r\n        name: movie.name,\r\n        releaseDate: movie.releaseDate,\r\n        movieLength: movie.movieLength,\r\n        category: movie.category,\r\n        description: movie.description,\r\n        metaData: true\r\n      });\r\n    });\r\n  }, [name]);\r\n\r\n  const updateMovie = e => {\r\n    e.preventDefault();\r\n\r\n    fetchAPI('editMovie', {\r\n      movieId: movieData.movieId,\r\n      toUpdate: {\r\n        name: movieData.name,\r\n        releaseDate: movieData.releaseDate,\r\n        movieLength: movieData.movieLength,\r\n        category: movieData.category,\r\n        description: movieData.description\r\n      }\r\n    }).then(data => {\r\n      setEditing(false);\r\n    });\r\n  }\r\n\r\n  if(editing === false) {\r\n    return(\r\n      <main>\r\n        <div className=\"movieCont\">\r\n          <h2 className=\"title\">{movieData.name}</h2>\r\n          <div className=\"headline\">Filmdaten:</div>\r\n            <div className=\"flexedMetaCont\">\r\n              <label>\r\n                <span>Release:</span>\r\n                <span>{movieData.releaseDate}</span>\r\n              </label>\r\n              <label>\r\n                <span>Genre:</span>\r\n                <span>{movieData.category}</span>\r\n              </label>\r\n              <label>\r\n                <span>Länge:</span>\r\n                <span>{movieData.movieLength} Minuten</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"headline\">Beschreibung:</div>\r\n            <div className=\"descriptionCont\">\r\n              {movieData.description}\r\n            </div>\r\n          {\r\n            window.localStorage.getItem('authToken') ?\r\n            <ActionBtns movieId={movieData.movieId} setEditing={setEditing} /> : \r\n            null\r\n          }\r\n        </div>\r\n      </main>\r\n    )\r\n  }else {\r\n    return(\r\n      <main>\r\n        <Overlay values={movieData} setValues={setMovieData} onSave={updateMovie} />\r\n      </main>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MovieCont;\r\n\r\nconst ActionBtns = props => {\r\n  const history = useHistory();\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n  const deleteMovie = () => {\r\n    fetchAPI('deleteMovie', {movieId: props.movieId}).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  }\r\n\r\n  const openEdit = () => {\r\n    props.setEditing(true);\r\n  }\r\n\r\n  return(\r\n    <div className=\"editBtns\">\r\n      <FavoriteBtn movieId={props.movieId} />\r\n      <button onClick={openEdit}>Bearbeiten</button>\r\n      <button onClick={() => setShowConfirm(true)}>Löschen</button>\r\n      <ConfirmCont msg={'Möchtest Du diesen Eintrag wirklich löschen?'} doSubmit={deleteMovie} showConfirm={showConfirm} setShowConfirm={setShowConfirm} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst FavoriteBtn = props => {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(props.movieId > 0) {\r\n      fetchAPI('getFavoriteFromMovie', {movieId: props.movieId}).then(data => {\r\n        if(data.success) {\r\n          setIsFavorite(true);\r\n        }else {\r\n          setIsFavorite(false);\r\n        }\r\n      });\r\n    }\r\n  }, [props.movieId]);\r\n\r\n  const addToFavorites = () => {\r\n    fetchAPI('addFavorite', {movieId: props.movieId}).then(data => {\r\n      if(data.success) {\r\n        setIsFavorite(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteFromFavorites = () => {\r\n    fetchAPI('removeFavorite', {movieId: props.movieId}).then(data => {\r\n      if(data.success) {\r\n        setIsFavorite(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {\r\n      isFavorite ?\r\n        <button onClick={deleteFromFavorites}>Favorisiert</button> :\r\n        <button onClick={addToFavorites}>Favorisieren</button>\r\n    }\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { fetchAPI } from '../components/functions';\r\n\r\nconst Favorites = () => {\r\n  const {userId} = useParams();\r\n  const [favorites, setFavorites] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!userId) {\r\n      fetchAPI('getFavorites').then(data => {\r\n        if(data.success) {\r\n          setFavorites(data.return);\r\n        }else {\r\n          setFavorites(false);\r\n        }\r\n      });\r\n    }else {\r\n      fetchAPI('getFavorites', {userId: userId}).then(data => {\r\n        if(data.success) {\r\n          setFavorites(data.return);\r\n        }else {\r\n          setFavorites(false);\r\n        }\r\n      });\r\n    }\r\n  }, [userId]);\r\n\r\n  if(favorites) {\r\n    return(\r\n      <main>\r\n        <div className=\"favoritesWrapper\">\r\n          <h2 className=\"title\">Favoriten</h2>\r\n          <ol>\r\n            {\r\n              favorites.map(favorites => \r\n                <li key={favorites.movieId}>\r\n                  <Link className=\"listLink\" to={`/Movie/${favorites.name}/`}>{favorites.name}</Link>\r\n                </li>\r\n              )\r\n            }\r\n          </ol>\r\n        </div>\r\n      </main>\r\n    )\r\n  }else {\r\n    return(\r\n      <main>\r\n        <div className=\"centered\">\r\n          <h2>Du hast noch keine Favoriten!</h2>\r\n          <p>Du möchtest welche?</p>\r\n          <Link className=\"btnAppearence\" to=\"/Categories/\">In Kategorien stöbern</Link>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Favorites;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { fetchAPI } from '../components/functions';\r\n\r\nconst Profile = () => {\r\n  const {userId} = useParams();\r\n  const [profileData, setProfileData] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!userId) {\r\n      fetchAPI('getProfile').then(data => {\r\n        setProfileData(data.return);\r\n      });\r\n    }else {\r\n      fetchAPI('getProfile', {userId: userId}).then(data => {\r\n        setProfileData(data.return);\r\n      });\r\n    }\r\n  }, [userId]);\r\n\r\n  if(profileData) {\r\n    return(\r\n      <main>\r\n        <div className=\"profileWrapper\">\r\n          <h2 className=\"title\"><span>{profileData.name}</span> <span>{profileData.surname}</span></h2>\r\n          <div className=\"headline\">Über {profileData.name}:</div>\r\n          <div className=\"flexedMetaCont\">\r\n            <label>\r\n              <span>Email-Adresse:</span>\r\n              <span>{profileData.email}</span>\r\n            </label>\r\n            <label>\r\n              <span>Dabei seit:</span>\r\n              <span>{profileData.created}</span>\r\n            </label>\r\n          </div>\r\n          {\r\n            userId ? \r\n              <Link to={`/Favorites/${userId}`}>&#x3e; Zur Favoritenliste von {profileData.name}</Link> :\r\n              <Link to={`/Favorites/`}>&#x3e; Zu meinen Favoriten</Link>\r\n          }\r\n        </div>\r\n      </main>\r\n    )\r\n  }else {\r\n    return(\r\n      <main>\r\n        <h2>Lade...</h2>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchAPI } from './components/functions';\r\nimport { Link } from 'react-router-dom';\r\nimport { ErrMsg } from './components/components';\r\n\r\nconst SearchResults = () => {\r\n  const {searchValue} = useParams();\r\n  const [movieData, setMovieData] = useState();\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchAPI('getSearchValue', {value: searchValue}).then(data => {\r\n      if(data.success) {\r\n        setMovieData(data.return);\r\n      }else {\r\n        setErrMsg(data.return);\r\n      }\r\n    });\r\n  }, [searchValue]);\r\n\r\n  if(movieData) {\r\n    return(\r\n      <main className=\"searchResults\">\r\n        <h2>Suchergebnisse</h2>\r\n          {\r\n            movieData.map(data => <span key={data.movieId}><Link to={`/Movie/${data.name}`}>{data.name}</Link></span>)\r\n          }\r\n      </main>\r\n    )\r\n  }else {\r\n    return(\r\n      <main>\r\n        <h2><ErrMsg message={errMsg} /></h2>\r\n        <span className=\"centered\"><Link className=\"btnAppearence\" to=\"/Add/\">Diesen Film hinzufügen</Link></span>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchResults;","import React, { useContext }  from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {t} from './index';\r\nimport AddMovie from './add';\r\nimport Categories from './categories';\r\nimport Category from './category';\r\nimport Landing from './landing';\r\nimport LoggedOut from './login';\r\nimport MovieCont from './movie';\r\nimport Favorites from './profile/favorites';\r\nimport Profile from './profile/profile';\r\nimport SearchResults from './search';\r\n\r\nexport function AllRouters () {\r\n  const {token} = useContext(t);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Landing} />\r\n      {\r\n        !token && <Route exact path=\"/Login/\" component={LoggedOut} />\r\n      }\r\n      <Route exact path=\"/Search/:searchValue/\" component={SearchResults} />\r\n      <Route exact path=\"/Movie/:name/\" component={MovieCont} />\r\n      <Route exact path={[\"/Profile/\", \"/Profile/:userId/\"]} component={Profile} />\r\n      <Route path={[\"/Favorites/\", \"/Favorites/:userId/\"]} component={Favorites} />\r\n      <Route exact path=\"/Categories/\" component={Categories} />\r\n      <Route exact path=\"/Categories/:categoryName/\" component={Category} />\r\n      <Route path=\"/Add/\" component={ token ? AddMovie : LoggedOut } />\r\n    </Switch>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <footer>\r\n    <Link to=\"/Impressum/\">Impressum</Link>\r\n    </footer>\r\n  )\r\n}\r\nexport default Footer;","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { fetchAPI } from \"./functions\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {t} from '../index';\r\n\r\nconst Header = () => {\r\n  const {token} = useContext(t);\r\n  return(\r\n    <header>\r\n      <Link to=\"/\">Netgo's Filmdatenbank</Link>\r\n      <span className=\"rightBtnsHeader\">\r\n        <SearchButton />\r\n        {\r\n          token ? \r\n          <ProfileButton /> :\r\n          <Link to={\"/Login/\"}>Einloggen/Registrieren</Link>\r\n        }\r\n      </span>\r\n    </header>\r\n  )\r\n}\r\n\r\nconst SearchButton = () => {\r\n  const history = useHistory();\r\n  const [toggleSearchbar, setToggleSearchbar] = useState(false);\r\n  const [movieData, setMovieData] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const openSeachbar = () => {\r\n    toggleSearchbar ? \r\n    setToggleSearchbar(false) :\r\n    setToggleSearchbar(true);\r\n\r\n    if(toggleSearchbar && search !== \"\") {\r\n      history.push(`/Search/${search}`);\r\n    }\r\n  }\r\n\r\n  const searchMovies = e => {\r\n    setSearch(e.target.value);\r\n    \r\n    fetchAPI('getSearchValue', {value: e.target.value}).then(data => {\r\n      if(data.success) {\r\n        setMovieData(data.return);\r\n      }else {\r\n        setMovieData(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {\r\n      toggleSearchbar ?\r\n      <>\r\n      <input placeholder=\"z.B. V wie Vendetta...\" className=\"searchInput\" value={search} onChange={e => searchMovies(e)} />\r\n      {\r\n         movieData ? <SuggestionsCont movies={movieData} setMovies={setMovieData} /> : null\r\n      }\r\n      </> :\r\n      null\r\n    }\r\n    <button className=\"headerBtn\" onClick={openSeachbar}>\r\n      🔍\r\n    </button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SuggestionsCont = props => {\r\n  const closeSuggestions = () => {\r\n    props.setMovies(null);\r\n  }\r\n  return(\r\n    <div className=\"suggestions\">\r\n      {\r\n        props.movies.map(data => <span key={data.movieId}><Link to={`/Movie/${data.name}`} onClick={closeSuggestions}>{data.name}</Link></span>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileButton = () => {\r\n  const [toggleMenu, setToggleMenu] = useState();\r\n  const menuRef = useRef();\r\n\r\n  const openMenu = () => {\r\n    toggleMenu ? setToggleMenu(false) : setToggleMenu(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const closeMenu = e => {\r\n      if(toggleMenu && e.target !== menuRef) {\r\n        setToggleMenu(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', closeMenu);\r\n\r\n    return () => document.removeEventListener('click', closeMenu);\r\n  }, [toggleMenu]);\r\n\r\n  return(\r\n    <>\r\n    <button className=\"headerBtn\" onClick={openMenu}>\r\n      👤\r\n    </button>\r\n    {\r\n      toggleMenu ? <Menu menuRef={menuRef} /> : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nconst Menu = props => {\r\n  return(\r\n    <div ref={props.menuRef} className=\"menu\">\r\n      <Link to=\"/Profile/\">Profil</Link>\r\n      <Link to=\"/Favorites/\">Favoriten</Link>\r\n      <LogOutButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LogOutButton = () => {\r\n  const {deleteToken} = useContext(t);\r\n\r\n  const fetchLogOut = () => {\r\n    fetchAPI('logOut').then(() => {\r\n     deleteToken();\r\n    });\r\n  }\r\n  \r\n  return(\r\n    <button className=\"logOutBtn\" onClick={fetchLogOut}>Ausloggen</button>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {fetchAPI} from \"./components/functions\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { AllRouters } from './routers';\nimport Footer from './components/footer';\nimport Header from './components/header';\nimport './css/index.css';\n\nexport const t = React.createContext(null);\n\nconst App = () => {\n  const [token, setToken] = useState(window.localStorage.getItem('authToken'));\n\n  const toggleToken = t => {\n    window.localStorage.setItem('authToken', t)\n    setToken(t);\n  }\n\n  const deleteToken = () => {\n    window.localStorage.removeItem('authToken');\n    setToken(false);\n  }\n\n  useEffect(() => {\n    if(token) {\n      fetchAPI('refreshToken',  {authToken: token}).then(data => {\n        data.success ? \n          toggleToken(data.return) :\n          deleteToken();\n      });\n    }\n  }, []);\n\n  return (\n    <div id=\"App\">\n    <t.Provider value={{token, toggleToken, deleteToken}} >\n      <Header />\n      <AllRouters />\n    </t.Provider>\n    <Footer />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}